
import telebot
import requests
from config import TOKEN
from crypto_parser import get_crypto_data

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot(TOKEN)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π
def get_crypto_news():
    try:
        url = "https://newsapi.org/v2/everything?q=crypto&apiKey=d9ce5375-bc45-4c3b-a5fa-5ecf5dd7a5f6"
        response = requests.get(url)
        data = response.json()

        if "articles" in data:
            articles = data["articles"][:5]  # –ë–µ—Ä–µ–º 5 –Ω–æ–≤–æ—Å—Ç–µ–π
            news_text = ""
            for article in articles:
                news_text += f"üîπ {article['title']}\n{article['url']}\n\n"
            return news_text
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤–æ—Å—Ç–∏."
    except Exception as e:
        return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π."

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start_command(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏—Å—ã–ª–∞–µ—Ç –Ω–æ–≤–æ—Å—Ç–∏ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–µ. \n\n"
                         "–ò—Å–ø–æ–ª—å–∑—É–π —ç—Ç–∏ –∫–æ–º–∞–Ω–¥—ã:\n"
                         "/news - –ø–æ–ª—É—á–∏—Ç—å —Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏\n"
                         "/crypto - –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞—Ö")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /news
@bot.message_handler(commands=['news'])
def send_news(message):
    bot.reply_to(message, "–°–æ–±–∏—Ä–∞—é –Ω–æ–≤–æ—Å—Ç–∏...")
    news = get_crypto_news()
    bot.send_message(message.chat.id, news)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /crypto
@bot.message_handler(commands=['crypto'])
def send_crypto_data(message):
    bot.reply_to(message, "–°–æ–±–∏—Ä–∞—é –¥–∞–Ω–Ω—ã–µ –æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞—Ö...")
    # try:
    crypto_data = get_crypto_data()
    if crypto_data:
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö —á–∞—Å—Ç—è–º–∏, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–µ–≤—ã—à–∞—Ç—å –ª–∏–º–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        chunks = [crypto_data[i:i+4000] for i in range(0, len(crypto_data), 4000)]
        for chunk in chunks:
            bot.send_message(message.chat.id, chunk)
    else:
        bot.send_message(message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞—Ö.")
    # except Exception as e:
    #     bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞—Ö.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.infinity_polling()
